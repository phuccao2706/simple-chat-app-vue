{"remainingRequest":"/Users/caophuc/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caophuc/vue-app/src/views/Playlist/Playlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/caophuc/vue-app/src/views/Playlist/Playlist.vue","mtime":1603372418879},{"path":"/Users/caophuc/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caophuc/vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caophuc/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caophuc/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByb3V0ZXIgZnJvbSAiQC9yb3V0ZXIiOwppbXBvcnQgeyBnZXRQbGF5bGlzdERldGFpbCB9IGZyb20gIkAvc2VydmljZXMiOwppbXBvcnQgeyBwbGF5QVNvbmcgfSBmcm9tICJAL3V0aWxzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUGxheWxpc3QiLAogIGRhdGE6ICgpID0+ICh7CiAgICBwbGF5bGlzdDoge30sCiAgICBpdGVtczogW10sCiAgfSksCiAgbWV0aG9kczogewogICAgYXN5bmMgX2dldFBsYXlsaXN0RGV0YWlsKGlkKSB7CiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBnZXRQbGF5bGlzdERldGFpbChpZCk7CiAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICB0aGlzLnBsYXlsaXN0ID0gZGF0YTsKICAgICAgdGhpcy5pdGVtcyA9IGRhdGEudHJhY2tzLml0ZW1zOwogICAgfSwKICAgIHBsYXlBU29uZyh1cmkpIHsKICAgICAgcGxheUFTb25nKHVyaSwgd2luZG93LnNwb3RpZnlQbGF5ZXIpOwogICAgfSwKICB9LAoKICBtb3VudGVkKCkgewogICAgY29uc3QgaWQgPSByb3V0ZXIuY3VycmVudFJvdXRlLnBhcmFtcy5pZDsKICAgIHRoaXMuX2dldFBsYXlsaXN0RGV0YWlsKGlkKTsKICB9LAp9Owo="},{"version":3,"sources":["Playlist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Playlist.vue","sourceRoot":"src/views/Playlist","sourcesContent":["<template>\n  <div class=\"playlist\">\n    <p class=\"text-h3 ml-5 mt-5 pink--text text--lighten-4\">playlist</p>\n\n    <v-container>\n      <v-row>\n        <!-- <v-img\n          lazy-src=\"https://picsum.photos/id/11/10/6\"\n          max-height=\"250\"\n          max-width=\"250\"\n          :src=\"playlist.images[0].url\"\n        ></v-img> -->\n\n        <div>{{ playlist.name }}</div>\n      </v-row>\n    </v-container>\n\n    <v-simple-table>\n      <thead>\n        <tr>\n          <th class=\"text-left\">#</th>\n          <th class=\"text-center\"></th>\n          <th class=\"text-left\">Song</th>\n          <th class=\"text-left\">Artist</th>\n          <th class=\"text-left\">Album</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"({ track }, i) in items\" :key=\"track.id\" height=\"70\">\n          <td class=\"grey--text text--darken-1\">\n            {{ i + 1 }}\n          </td>\n          <td class=\"text-center\">\n            <div class=\"avatar-wrapper\">\n              <v-btn icon color=\"pink\" class=\"avatar-wrapper__btn\">\n                <v-icon>mdi-heart</v-icon>\n              </v-btn>\n              <v-avatar rounded>\n                <img\n                  @click=\"playASong(track.uri)\"\n                  :src=\"track.album.images[0].url\"\n                  alt=\"John\"\n                />\n              </v-avatar>\n            </div>\n          </td>\n          <td>{{ track.name }}</td>\n          <td class=\"grey--text text--darken-1\">\n            {{ track.artists[0].name }}\n          </td>\n          <td class=\"grey--text text--darken-1\">{{ track.album.name }}</td>\n        </tr>\n      </tbody>\n    </v-simple-table>\n  </div>\n</template>\n\n<script>\nimport router from \"@/router\";\nimport { getPlaylistDetail } from \"@/services\";\nimport { playASong } from \"@/utils\";\n\nexport default {\n  name: \"Playlist\",\n  data: () => ({\n    playlist: {},\n    items: [],\n  }),\n  methods: {\n    async _getPlaylistDetail(id) {\n      const data = await getPlaylistDetail(id);\n      console.log(data);\n      this.playlist = data;\n      this.items = data.tracks.items;\n    },\n    playASong(uri) {\n      playASong(uri, window.spotifyPlayer);\n    },\n  },\n\n  mounted() {\n    const id = router.currentRoute.params.id;\n    this._getPlaylistDetail(id);\n  },\n};\n</script>\n\n<style scoped>\n.avatar-wrapper {\n  position: relative;\n}\n\n.avatar-wrapper:hover .avatar-wrapper__btn {\n  opacity: 1;\n}\n\n.avatar-wrapper__btn {\n  position: absolute;\n  z-index: 1;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0;\n}\n</style>\n"]}]}