{"remainingRequest":"/Users/caophuc/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caophuc/vue-app/src/components/TilThatDate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/caophuc/vue-app/src/components/TilThatDate.vue","mtime":1611755720911},{"path":"/Users/caophuc/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caophuc/vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caophuc/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caophuc/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByb3V0ZXIgZnJvbSAiQC9yb3V0ZXIiOwppbXBvcnQgaW5pdFBsYXllciBmcm9tICJAL3V0aWxzL2luaXRQbGF5ZXIiOwppbXBvcnQgeyBzZXRBY2Nlc3NUb2tlbiwgcmVtb3ZlQWNjZXNzdG9rZW4sIGdldEFjY2Vzc3Rva2VuIH0gZnJvbSAiQC91dGlscyI7CmltcG9ydCB7IENPTU1JVF9LRVlTIH0gZnJvbSAiQC9hcHBDb25zdGFudHMiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUaWxUaGF0RGF0ZSIsCiAgY29tcHV0ZWQ6IHt9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIF9nZXRUb2tlbihhY2Nlc3NUb2tlbikgewogICAgICBzZXRBY2Nlc3NUb2tlbihhY2Nlc3NUb2tlbik7CiAgICAgIHJvdXRlci5wdXNoKCIvIik7CiAgICAgIHJldHVybiBhY2Nlc3NUb2tlbjsKICAgIH0sCiAgICBoYW5kbGVMb2dpbigpIHsKICAgICAgY29uc3QgeyBWVUVfQVBQX0NMSUVOVF9JRCB9ID0gcHJvY2Vzcy5lbnY7CiAgICAgIGNvbnN0IHJlZGlyZWN0X3VyaSA9ICJodHRwOi8vbG9jYWxob3N0OjgwODAvIjsKICAgICAgY29uc3Qgc2NvcGVzID0gInN0cmVhbWluZywgdXNlci1yZWFkLWVtYWlsLCB1c2VyLXJlYWQtcHJpdmF0ZSI7CgogICAgICB3aW5kb3cub3BlbigKICAgICAgICBgaHR0cHM6Ly9hY2NvdW50cy5zcG90aWZ5LmNvbS9hdXRob3JpemU/Y2xpZW50X2lkPSR7VlVFX0FQUF9DTElFTlRfSUR9JnJlc3BvbnNlX3R5cGU9dG9rZW4mcmVkaXJlY3RfdXJpPSR7cmVkaXJlY3RfdXJpfSZzY29wZT0ke3Njb3Blc30mc2hvd19kaWFsb2c9dHJ1ZWAsCiAgICAgICAgIkxvZ2luIHdpdGggU3BvdGlmeSIsCiAgICAgICAgIndpZHRoPTgwMCxoZWlnaHQ9NjAwIgogICAgICApOwogICAgfSwKICAgIGhhbmRsZUxvZ291dCgpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KENPTU1JVF9LRVlTLkxPR09VVCk7CgogICAgICByZXR1cm4gcmVtb3ZlQWNjZXNzdG9rZW4oKTsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgY29uc3QgdG9rZW4gPQogICAgICBnZXRBY2Nlc3N0b2tlbigpIHx8CiAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cigxKS5zcGxpdCgiJiIpWzBdLnNwbGl0KCI9IilbMV07CiAgICBjb25zb2xlLmxvZyh0b2tlbik7CiAgICBpZiAodG9rZW4pIHsKICAgICAgdGhpcy5fZ2V0VG9rZW4odG9rZW4pOwogICAgICBpbml0UGxheWVyKCk7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdChDT01NSVRfS0VZUy5MT0dJTik7CiAgICB9CiAgfSwKfTsK"},{"version":3,"sources":["TilThatDate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TilThatDate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"mx-auto\">\n    <v-btn\n      v-if=\"!this.$store.state.isLoggedIn\"\n      class=\"pink white--text\"\n      @click=\"this.handleLogin\"\n      >Login\n    </v-btn>\n\n    <v-btn v-else class=\"pink white--text\" @click=\"this.handleLogout\"\n      >Logout\n    </v-btn>\n  </div>\n</template>\n\n<script>\nimport router from \"@/router\";\nimport initPlayer from \"@/utils/initPlayer\";\nimport { setAccessToken, removeAccesstoken, getAccesstoken } from \"@/utils\";\nimport { COMMIT_KEYS } from \"@/appConstants\";\n\nexport default {\n  name: \"TilThatDate\",\n  computed: {},\n  methods: {\n    async _getToken(accessToken) {\n      setAccessToken(accessToken);\n      router.push(\"/\");\n      return accessToken;\n    },\n    handleLogin() {\n      const { VUE_APP_CLIENT_ID } = process.env;\n      const redirect_uri = \"http://localhost:8080/\";\n      const scopes = \"streaming, user-read-email, user-read-private\";\n\n      window.open(\n        `https://accounts.spotify.com/authorize?client_id=${VUE_APP_CLIENT_ID}&response_type=token&redirect_uri=${redirect_uri}&scope=${scopes}&show_dialog=true`,\n        \"Login with Spotify\",\n        \"width=800,height=600\"\n      );\n    },\n    handleLogout() {\n      this.$store.commit(COMMIT_KEYS.LOGOUT);\n\n      return removeAccesstoken();\n    },\n  },\n  mounted() {\n    const token =\n      getAccesstoken() ||\n      window.location.hash.substr(1).split(\"&\")[0].split(\"=\")[1];\n    console.log(token);\n    if (token) {\n      this._getToken(token);\n      initPlayer();\n      this.$store.commit(COMMIT_KEYS.LOGIN);\n    }\n  },\n};\n</script>\n"]}]}