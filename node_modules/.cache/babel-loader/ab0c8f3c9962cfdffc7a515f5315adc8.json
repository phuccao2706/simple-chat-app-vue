{"remainingRequest":"/Users/caophuc/vue-app/node_modules/babel-loader/lib/index.js!/Users/caophuc/vue-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/caophuc/vue-app/src/utils/index.js","dependencies":[{"path":"/Users/caophuc/vue-app/src/utils/index.js","mtime":1606538098838},{"path":"/Users/caophuc/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caophuc/vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caophuc/vue-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7Cgp2YXIgX3RoaXMgPSB0aGlzOwoKaW1wb3J0IHsgQ09NTUlUX0tFWVMgfSBmcm9tICJAL2FwcENvbnN0YW50cy5qcyI7CmV4cG9ydCB2YXIgaXNMb2dnZWRJbiA9IGZ1bmN0aW9uIGlzTG9nZ2VkSW4oKSB7CiAgdmFyIGFjY2Vzc0tleSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJhY2Nlc3MtdG9rZW4iKTsKICByZXR1cm4gISFhY2Nlc3NLZXk7Cn07CmV4cG9ydCB2YXIgc2V0QWNjZXNzVG9rZW4gPSBmdW5jdGlvbiBzZXRBY2Nlc3NUb2tlbihhY2Nlc3NUb2tlbikgewogIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJhY2Nlc3MtdG9rZW4iLCBhY2Nlc3NUb2tlbik7Cn07CmV4cG9ydCB2YXIgcmVtb3ZlQWNjZXNzdG9rZW4gPSBmdW5jdGlvbiByZW1vdmVBY2Nlc3N0b2tlbigpIHsKICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgiYWNjZXNzLXRva2VuIik7Cn07CmV4cG9ydCB2YXIgcGxheUFTb25nID0gZnVuY3Rpb24gcGxheUFTb25nKHRyYWNrLCBwbGF5ZXJJbnN0YW5jZSwgc3RvcmVJbnN0YW5jZSkgewogIHZhciBnZXRPQXV0aFRva2VuID0gcGxheWVySW5zdGFuY2UuX29wdGlvbnMuZ2V0T0F1dGhUb2tlbjsKICB2YXIgaWQgPSBwbGF5ZXJJbnN0YW5jZS5fb3B0aW9ucy5pZDsKCiAgX3RoaXMuJHN0b3JlLmNvbW1pdChDT01NSVRfS0VZUy5TRVRfQ1VSUkVOVF9TT05HLCB0cmFjayk7CgogIGdldE9BdXRoVG9rZW4oZnVuY3Rpb24gKGFjY2Vzc190b2tlbikgewogICAgZmV0Y2goImh0dHBzOi8vYXBpLnNwb3RpZnkuY29tL3YxL21lL3BsYXllci9wbGF5P2RldmljZV9pZD0iLmNvbmNhdChpZCksIHsKICAgICAgbWV0aG9kOiAiUFVUIiwKICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgIHVyaXM6IFt0cmFjay51cmldCiAgICAgIH0pLAogICAgICBoZWFkZXJzOiB7CiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KGFjY2Vzc190b2tlbikKICAgICAgfQogICAgfSk7CiAgfSk7Cn07"},{"version":3,"sources":["/Users/caophuc/vue-app/src/utils/index.js"],"names":["COMMIT_KEYS","isLoggedIn","accessKey","localStorage","getItem","setAccessToken","accessToken","setItem","removeAccesstoken","removeItem","playASong","track","playerInstance","storeInstance","getOAuthToken","_options","id","$store","commit","SET_CURRENT_SONG","access_token","fetch","method","body","JSON","stringify","uris","uri","headers","Authorization"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,mBAA5B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAlB;AAEA,SAAO,CAAC,CAACF,SAAT;AACD,CAJM;AAMP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD,EAAiB;AAC7CH,EAAAA,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCD,WAArC;AACD,CAFM;AAIP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrCL,EAAAA,YAAY,CAACM,UAAb,CAAwB,cAAxB;AACD,CAFM;AAIP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,cAAR,EAAwBC,aAAxB,EAA0C;AACjE,MAAMC,aAAa,GAAGF,cAAc,CAACG,QAAf,CAAwBD,aAA9C;AACA,MAAME,EAAE,GAAGJ,cAAc,CAACG,QAAf,CAAwBC,EAAnC;;AACA,EAAA,KAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBlB,WAAW,CAACmB,gBAA/B,EAAiDR,KAAjD;;AACAG,EAAAA,aAAa,CAAC,UAACM,YAAD,EAAkB;AAC9BC,IAAAA,KAAK,+DAAwDL,EAAxD,GAA8D;AACjEM,MAAAA,MAAM,EAAE,KADyD;AAEjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,IAAI,EAAE,CAACf,KAAK,CAACgB,GAAP;AAAR,OAAf,CAF2D;AAGjEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,mBAAYT,YAAZ;AAFN;AAHwD,KAA9D,CAAL;AAQD,GATY,CAAb;AAUD,CAdM","sourcesContent":["import { COMMIT_KEYS } from \"@/appConstants.js\";\n\nexport const isLoggedIn = () => {\n  const accessKey = localStorage.getItem(\"access-token\");\n\n  return !!accessKey;\n};\n\nexport const setAccessToken = (accessToken) => {\n  localStorage.setItem(\"access-token\", accessToken);\n};\n\nexport const removeAccesstoken = () => {\n  localStorage.removeItem(\"access-token\");\n};\n\nexport const playASong = (track, playerInstance, storeInstance) => {\n  const getOAuthToken = playerInstance._options.getOAuthToken;\n  const id = playerInstance._options.id;\n  this.$store.commit(COMMIT_KEYS.SET_CURRENT_SONG, track);\n  getOAuthToken((access_token) => {\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({ uris: [track.uri] }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n  });\n};\n"]}]}